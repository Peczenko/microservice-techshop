services:
  mongo:
    image: mongo:latest
    container_name: mongo_db_techshop
    ports:
      - 27017:27017
    volumes:
        - mongo_data:/data/db
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: root
    networks:
        - techshop-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express_techshop
    ports:
      - 8081:8081
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo
    networks:
        - techshop-network

  postgres:
    image: postgres:latest
    container_name: postgres_db_techshop
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
        - postgres_data:/data/postgres
    networks:
      - techshop-network
    restart: unless-stopped


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_techshop
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - techshop-network


  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_techshop
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 # PLAINTEXT://localhost:9092 for local dev
    networks:
      - techshop-network

  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - techshop-network


  zipkin:
    container_name: zipkin_techshop
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - techshop-network

  keycloak:
    container_name: keycloak-techshop
    build:
      ./keycloak-config
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
#      KC_HOSTNAME_DEBUG: true
      KC_HOSTNAME_ADMIN_URL: http://localhost:8080
    networks:
      - techshop-network
    volumes:
      - ./keycloak-config:/opt/keycloak/data/import
      - keycloak_data:/opt/keycloak/data


  config-server:
    image: ${DOCKER_USERNAME:+${DOCKER_USERNAME}/}config-server-techshop:latest
    container_name: config-server
    ports:
      - 8888:8888
    environment:
        SPRING_PROFILES_ACTIVE: docker,native
    networks:
      - techshop-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  discovery-server:
    image: ${DOCKER_USERNAME:+${DOCKER_USERNAME}/}discovery-techshop:latest
    container_name: discovery-server
    ports:
      - 8761:8761
    environment:
        SPRING_PROFILES_ACTIVE: docker
        SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
      zipkin:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - techshop-network


  api-gateway:
    image: ${DOCKER_USERNAME:+${DOCKER_USERNAME}/}api-gateway-techshop:latest
    container_name: api-gateway
    ports:
      - 8222:8222
    environment:
        SPRING_PROFILES_ACTIVE: docker
        SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - techshop-network

  user-service:
    image: ${DOCKER_USERNAME:+${DOCKER_USERNAME}/}user-service-techshop:latest
    container_name: user-service
    ports:
      - 7000:7000
    environment:
        SPRING_PROFILES_ACTIVE: docker
        SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    depends_on:
        config-server:
            condition: service_healthy
        discovery-server:
            condition: service_healthy
        mongo:
          condition: service_started
    networks:
      - techshop-network

  product_service:
    image: ${DOCKER_USERNAME:+${DOCKER_USERNAME}/}product-service-techshop:latest
    container_name: product-service
    ports:
      - 7010:7010
    environment:
        SPRING_PROFILES_ACTIVE: docker
        SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    depends_on:
        config-server:
            condition: service_healthy
        discovery-server:
            condition: service_healthy
        postgres:
          condition: service_started
    networks:
      - techshop-network

  order-service:
    image: ${DOCKER_USERNAME:+${DOCKER_USERNAME}/}order-service-techshop
    container_name: order-service
    ports:
      - 7020:7020
    environment:
        SPRING_PROFILES_ACTIVE: docker
        SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_started
    networks:
      - techshop-network

  payment-service:
    image: ${DOCKER_USERNAME:+${DOCKER_USERNAME}/}payment-service-techshop:latest
    container_name: payment-service
    ports:
      - 7050:7050
    environment:
        SPRING_PROFILES_ACTIVE: docker
        SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_started
    networks:
      - techshop-network

  notification-service:
    image: ${DOCKER_USERNAME:+${DOCKER_USERNAME}/}notification-service-techshop:latest
    container_name: notification-service
    ports:
      - 7030:7030
    environment:
        SPRING_PROFILES_ACTIVE: docker
        SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_started
    networks:
      - techshop-network




networks:
  techshop-network:
    driver: bridge
volumes:
  mongo_data:
  postgres_data:
  keycloak_data:




