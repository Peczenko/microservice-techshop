plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id("com.google.cloud.tools.jib") version "3.4.5"
}

def envFile = file("${rootDir}/../../.env")
def envProps = new Properties()
envFile.withReader('UTF-8') { reader ->
    envProps.load(reader)
}
envProps.each { key, value ->
    project.ext.set(key, value)
}

jib {
    from {
        image = "eclipse-temurin:21-jdk"
    }
    to {
        image = "docker.io/${DOCKER_USERNAME}/${project.name}-techshop:latest"
        auth {
            username = DOCKER_USERNAME
            password = DOCKER_PASSWORD
        }
    }
}

group = 'project.org'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencies {
    implementation group: 'io.github.openfeign', name: 'feign-micrometer', version: '13.5'

    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    implementation group: 'org.keycloak', name: 'keycloak-admin-client', version: '26.0.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-authorization-server', version: '3.4.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.4.2'
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '6.4.3'
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
